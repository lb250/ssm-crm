package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.pojo.ClueActivityRelation;
import com.bjpowernode.crm.workbench.pojo.ClueRemark;

import java.util.List;
import java.util.Map;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Jul 11 11:30:55 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Jul 11 11:30:55 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Jul 11 11:30:55 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Jul 11 11:30:55 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Jul 11 11:30:55 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Jul 11 11:30:55 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);
    /*

     */
    int saveClueActivityRelation(List<ClueActivityRelation> clueActivityRelation);
    /***
     * @Param 'map  activity_id clue_id
     *
     */
    int deleteClueActivityRelationById(Map map);
     /***
     * @param /String  clueId
     * 查找该线索所对应的所有的对应关系
     */
    List<ClueActivityRelation> selectClueActivityRelationList(String id);
    /**
     * @param  /String clueId
     * 删除所有该线索对应的活动关系
     */
    int deleteClueActivityRelationByClueId(String clueId);
}