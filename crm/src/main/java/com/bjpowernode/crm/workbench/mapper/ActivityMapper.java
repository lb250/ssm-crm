package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.pojo.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Jul 09 09:48:29 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Jul 09 09:48:29 CST 2022
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Jul 09 09:48:29 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Jul 09 09:48:29 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Jul 09 09:48:29 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Jul 09 09:48:29 CST 2022
     */
    int updateByPrimaryKey(Activity record);
    /**
     * @param   "page"页数 num 显示个数
     * 分页查找活动
     */
    List<Activity> selectActivitiesByPageAndNum(Map map);
    /**
     * @param
     * "查询活动总条数
     */
    int selectActivitiesCount(Map map);
    /**
     * @param "activity
     * "修改活动信息
     */
    int updateActivityById(Activity activity);
    /**
     * @param "string[]
     * "删除所选活动
     */
    int deleteActivitiesByIds(String[] id);
    /**
     * @param 'null
     * 查询所有的活动
     */
    List<Activity> selectAllActivities();
    /**
     * @param 'null
     * 查询所有的活动
     */
    List<Activity> selectActivitiesByIds(String[] id);
    /**
     * @param 'List<Activity>'
     * 插入选择的活动
     */
    int insertActivitiesByList(List<Activity> activityList);
    Activity selectActivityById(String id);
    int selectAllClueCount(Map map);
    /**
     * @param / String clueId
     * 查找该线索所对应的活动系列
     */
    List<Activity> selectAllActivityForDetailByClueId(String clueId);
    /**
     * @param / String clueId
     * 查找该线索所未对应的活动系列
     */
    List<Activity> selectAllActivityForAddByClueIdsAndLikeName(Map map);
    List<Activity> selectActivityListByName(String name);

}